# Base config file which stores the default parameters which apply to all model configurations
---

# Whether to run in development/debugging mode; this only uses a few samples in in the train/val dataset
# to quickly run the code as well as sets num_workers=0
dev_mode: False

# Base directory for output files; do not change this 
output_dir: "output/train"

# Experiment name; this will be used for the output directory; use "development" when developing
exp_name: "development"

# Name of dataset; must be one of the names in the dataset_map dict
dataset_name: "ImageNet"

# Log the train progress every n steps
log_train_steps: 60

# Parameters for the dataset class
dataset:

  # Path to the root of the dataset; detects which path to use based on device
  root: "/mnt/d/datasets/imagenet" # linux/windows path
  root_mac: "/Users/bsele/datasets/imagenet-2012" # mac path

  # Number of CPU processes the next sample in the dataset; use 0 to only use the main process
  num_workers: 4

train:
  # Configurations for training objects such as the optmizier, lr scheduler
  # See solvers.config for available configs
  solver_config: "resnet50_imagenet"

  ######### START HERE, finish up the parameters and get running, need to replace total steps with the value in this config
  
  batch_size: 128

  # Gradient accumulation batch size;
  # accumulate (sum) gradients for grad_accum_bs//batch_size steps before updating the weights; 
  # therefore batch_size must be divisible by grad_accum_bs; beneficial with constrained memory when
  # trying to replicate a larger batch size
  grad_accum_bs: 1024

  # The epoch to start on; starting at 1 makes calculations for logging and checkpointing more intuitive
  start_epoch: 1
  epochs: 300

  # Number of epochs to checkpoint after; use 'null' to turn off checkpointing
  ckpt_epochs: 5

  # Path of weights file (.pt) to resume training; 
  # use `null` to train a new model from scratch
  checkpoint_path:

validation:
  batch_size: 64

# GPU parameters
cuda:
  # List of GPU devices to use
  gpus: [0]


# Reproducibility information
reproducibility:
  seed: 42

